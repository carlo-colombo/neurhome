plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}

class RoomSchemaArgProvider implements CommandLineArgumentProvider {

    @InputDirectory
    @PathSensitive(PathSensitivity.RELATIVE)
    File schemaDir

    RoomSchemaArgProvider(File schemaDir) {
        this.schemaDir = schemaDir
    }

    @Override
    Iterable<String> asArguments() {
        // Note: If you're using KSP, change the line below to return
        // ["room.schemaLocation=${schemaDir.path}"].
        return ["room.schemaLocation=${schemaDir.path}".toString()]
    }
}

android {
    namespace 'ovh.litapp.neurhome3'
    compileSdk 34

    defaultConfig {
        applicationId "ovh.litapp.neurhome3"
        minSdk 31
        targetSdk 34
        versionCode findProperty("android.versionCode") as Integer
        versionName findProperty("android.versionName")

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions = ["env"]
    productFlavors {
        dev {
            dimension = "env"
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
        }
        prod {
            dimension = "env"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.8'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    buildFeatures {
        buildConfig = true
    }
}

ksp {
    arg(new RoomSchemaArgProvider(new File(projectDir, "schemas")))
}

dependencies {
    implementation 'androidx.appcompat:appcompat-resources:1.6.1'
    implementation 'androidx.datastore:datastore-preferences-core:1.0.0'
    implementation "androidx.datastore:datastore-preferences:1.0.0"
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'

    def nav_version = '2.7.7'

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.activity:activity-compose:1.8.2'

    implementation("androidx.navigation:navigation-compose:$nav_version")
    implementation platform('androidx.compose:compose-bom:2024.04.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.ui:ui-graphics'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.compose.material3:material3'

    implementation 'com.google.accompanist:accompanist-drawablepainter:0.34.0'
    implementation 'com.google.accompanist:accompanist-permissions:0.34.0'
    implementation "androidx.compose.material:material-icons-extended"

    def room_version = '2.6.1'

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // To use Kotlin Symbol Processing (KSP)
    ksp "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation("androidx.room:room-ktx:$room_version")

    implementation 'ch.hsr:geohash:1.4.0'

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform('androidx.compose:compose-bom:2024.04.00')
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
}